pipeline { agent any parameters { string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build') } stages { stage('CheckOutCode') { steps { script { def branch = params.BRANCH ?: 'main' git branch: "${branch}", credentialsId: '', url: '' echo "Current directory: ${pwd()}" echo "Files in directory:" bat 'dir' } } } stage('SonarQubeAnalysis') { steps { script { def scannerHome = tool 'SonarQubeScanner' withSonarQubeEnv('SonarQubeServer') { bat "${scannerHome}/bin/sonar-scanner -Dsonar.login=admin Dsonar.password=admin1 -Dsonar.projectKey=ThisIsMyMainProject" } } } } } post { always { junit 'target/surefire-reports/**/*.xml' } success { echo 'The pipeline has completed successfully.' } failure { echo 'The pipeline has failed.' } } }
